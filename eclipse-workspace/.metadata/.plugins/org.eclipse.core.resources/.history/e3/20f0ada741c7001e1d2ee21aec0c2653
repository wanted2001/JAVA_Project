package ezen_messenger;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;

public class FriendsManager{
	/* [친구]
	 * 친구 리스트 출력 
	 * 
	 * 친구 추가
	 * 
	 * 친구 삭제
	 * 닉네임 달기(천천히)
	 */
	//친구 리스트
	
	public void friendsList() throws IOException{
		BufferedReader tmp = new BufferedReader(new FileReader("C:\\Messenger\\tmp.txt"));
		String tp = tmp.readLine();
		BufferedReader fl = new BufferedReader(new FileReader(tp+"\\friendsList.txt"));
		System.out.println("=========친구 리스트=======");
		ArrayList<String> friList = new ArrayList<String>();
		while(true) {
			String fri = fl.readLine(); // 한라인 읽어오기
			if(fri==null) {
				friList.remove(0);
				break;
			}
			friList.add(fri);
			
		}
		for(String f : friList) {
			System.out.println("|"+f+" 상태");
		}
		fl.close();	
		tmp.close();
	}
	
	//친구 리스트
	public void friendsAdd(Scanner sc) throws IOException {
	    BufferedReader tmp = new BufferedReader(new FileReader("C:\\Messenger\\tmp.txt"));
	    String tp = tmp.readLine();
	    BufferedReader fa = new BufferedReader(new FileReader("C:\\Messenger\\memberList.txt"));
	    ArrayList<String> list = new ArrayList<String>();
	    
	    // 회원 목록을 읽어와서 리스트에 추가합니다.
	    while(true) {
	        String add = fa.readLine();
	        if(add == null) {
	            break;
	        }   
	        String id = add.substring(0, add.indexOf(" "));
	        list.add(id);
	    }
	    
	    System.out.println("=========회원 리스트=======");
	    // 회원 목록을 출력합니다.
	    for(String l : list) {
	        System.out.println("|"+l+" 상태");
	    }
	    
	    BufferedReader addfri = new BufferedReader(new FileReader(tp+"\\friendsList.txt"));
	    ArrayList<String> addfriendsList = new ArrayList<String>();
	    // 친구 목록을 읽어와서 리스트에 추가합니다.
	    while(true) {
	        String addfriends = addfri.readLine();
	        if(addfriends == null) {
	            break;
	        }   
	        String id = addfriends;
	        addfriendsList.add(id);
	    }
	    addfri.close();
	    tmp.close();
	    fa.close();
	    
	    System.out.println("친구추가할 사람을 입력하세요>");
	    String a = sc.next();
	    
	    // 회원 목록에 입력한 친구가 존재하는지 확인합니다.
	    boolean isMember = false;
	    for(String member : list) {
	        if(member.equals(a)) {
	            isMember = true;
	            break;
	        }
	    }
	    
	    // 만약 입력한 친구가 회원 목록에 없으면 메시지를 출력하고 메서드를 종료합니다.
	    if(!isMember) {
	        System.out.println("회원 목록에 없는 사람입니다.");
	        return;
	    }
	    
	    // 친구 목록에 입력한 친구가 이미 있는지 확인합니다.
	    for(String friend : addfriendsList) {
	        if(friend.equals(a)) {
	            System.out.println("친구가 이미 있습니다.");
	            return;
	        }
	    }
	    
	    System.out.println("친구 추가 되었습니다.");
	    FileWriter fw = new FileWriter(tp+"\\friendsList.txt", true);
	    fw.append(a+"\r\n");
	    fw.close();
	}

		
	public void frienddel(Scanner sc) throws IOException {
		BufferedReader tmp = new BufferedReader(new FileReader("C:\\Messenger\\tmp.txt"));
		String tp = tmp.readLine();
		BufferedReader dellist = new BufferedReader(new FileReader(tp+"\\friendsList.txt"));
		ArrayList<String> del = new ArrayList<String>();
		while(true) {
			String add = dellist.readLine();
			if(add==null) {
				break;
			}	
			String id = add;
			del.add(id);
		}
		for(String l : del) {
			System.out.println("|"+l+" 상태");
		}
		dellist.close();
		System.out.println("친구삭제할 이름을 입력하세요>");
		String d = sc.next();
		for(int i=0; i<del.size(); i++) {
			if(del.get(i).equals(d)) {
				del.remove(i);
				System.out.println("친구 삭제 완료");
			}
		}
		FileWriter newfriendslist = new FileWriter(tp+"\\friendsList.txt");
		for(int i=0; i<del.size(); i++) {
			String data = del.get(i);
			newfriendslist.append(data+"\r\n");
		}
		tmp.close();
		newfriendslist.close();
		
		
		
	}
}
